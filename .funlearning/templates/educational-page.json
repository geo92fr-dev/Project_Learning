{
  "id": "educational-page",
  "name": "Page √âducative FunLearning",
  "description": "Page compl√®te avec contenu p√©dagogique",
  "category": "page",
  "level": "all",
  "variables": [
    {
      "name": "title",
      "type": "string",
      "description": "Titre de la page",
      "required": true
    },
    {
      "name": "subject",
      "type": "string",
      "description": "Mati√®re concern√©e",
      "required": true
    },
    {
      "name": "level",
      "type": "string",
      "description": "Niveau scolaire cible",
      "required": true
    },
    {
      "name": "competences",
      "type": "array",
      "description": "Comp√©tences d√©velopp√©es",
      "required": true
    }
  ],
  "files": [
    {
      "path": "src/routes/{{kebabCase(title)}}/+page.svelte",
      "content": "<script>\n    /**\n     * üìö {{capitalize(title)}} - Page √âducative FunLearning\n     * Mati√®re: {{subject}} | Niveau: {{level}}\n     */\n    \n    import { onMount } from 'svelte';\n    import { page } from '$app/stores';\n    import EducationalLayout from '$lib/components/EducationalLayout.svelte';\n    import ProgressTracker from '$lib/components/ProgressTracker.svelte';\n    import ContentValidator from '$lib/components/ContentValidator.svelte';\n    \n    // M√©tadonn√©es p√©dagogiques\n    const metadata = {\n        title: '{{title}}',\n        subject: '{{subject}}',\n        level: '{{level}}',\n        competences: [{{#each competences}}'{{this}}'{{#unless @last}}, {{/unless}}{{/each}}],\n        difficulty: getDifficultyFromLevel('{{level}}'),\n        estimatedTime: 45 // minutes\n    };\n    \n    let progress = 0;\n    let validationScore = 0;\n    \n    onMount(() => {\n        // Tracking de la visite\n        trackPageVisit(metadata);\n        \n        // Validation du contenu pour le niveau\n        validateContentForLevel();\n    });\n    \n    function getDifficultyFromLevel(level) {\n        const levels = ['6eme', '5eme', '4eme', '3eme', 'seconde', 'premiere', 'terminale'];\n        return levels.indexOf(level) + 1;\n    }\n    \n    function trackPageVisit(meta) {\n        // Analytics p√©dagogiques\n        console.log('Page visit tracked:', meta);\n    }\n    \n    function validateContentForLevel() {\n        // Validation automatique du contenu\n        validationScore = 85; // Simulation\n    }\n    \n    function handleProgressUpdate(event) {\n        progress = event.detail.progress;\n    }\n    \n    function handleCompetenceValidated(event) {\n        console.log('Comp√©tence valid√©e:', event.detail.competence);\n    }\n</script>\n\n<svelte:head>\n    <title>{{title}} - {{subject}} {{level}} | FunLearning</title>\n    <meta name=\"description\" content=\"Cours de {{subject}} niveau {{level}}: {{title}}\" />\n    <meta name=\"educational-level\" content=\"{{level}}\" />\n    <meta name=\"educational-subject\" content=\"{{subject}}\" />\n    <meta name=\"educational-competences\" content=\"{{competences}}\" />\n</svelte:head>\n\n<EducationalLayout {metadata}>\n    <header slot=\"header\" class=\"page-header\">\n        <div class=\"subject-info\">\n            <span class=\"subject\">{{subject}}</span>\n            <span class=\"level\">{{level}}</span>\n        </div>\n        <h1>{{title}}</h1>\n        <div class=\"competences\">\n            <h2>Comp√©tences d√©velopp√©es:</h2>\n            <ul>\n                {{#each competences}}\n                <li>{{this}}</li>\n                {{/each}}\n            </ul>\n        </div>\n    </header>\n    \n    <aside slot=\"sidebar\">\n        <ProgressTracker \n            {progress} \n            {metadata}\n            on:progress={handleProgressUpdate} />\n        \n        <ContentValidator \n            score={validationScore}\n            level=\"{{level}}\" />\n    </aside>\n    \n    <main class=\"educational-content\">\n        <!-- Contenu principal charg√© depuis content.md -->\n        <div class=\"content-container\">\n            {#await import('./content.md')}\n                <p>Chargement du contenu...</p>\n            {:then module}\n                <svelte:component this={module.default} />\n            {:catch error}\n                <p>Erreur de chargement: {error.message}</p>\n            {/await}\n        </div>\n        \n        <!-- Activit√©s interactives -->\n        <section class=\"activities\">\n            <h2>üéØ Activit√©s Pratiques</h2>\n            \n            <div class=\"activity-grid\">\n                <div class=\"activity-card\">\n                    <h3>Quiz de Compr√©hension</h3>\n                    <p>Testez votre compr√©hension des concepts cl√©s</p>\n                    <button class=\"btn-primary\">Commencer</button>\n                </div>\n                \n                <div class=\"activity-card\">\n                    <h3>Exercice Pratique</h3>\n                    <p>Appliquez vos connaissances</p>\n                    <button class=\"btn-secondary\">Pratiquer</button>\n                </div>\n                \n                <div class=\"activity-card\">\n                    <h3>Projet Cr√©atif</h3>\n                    <p>Cr√©ez votre propre projet</p>\n                    <button class=\"btn-creative\">Cr√©er</button>\n                </div>\n            </div>\n        </section>\n        \n        <!-- √âvaluation -->\n        <section class=\"evaluation\">\n            <h2>üìä Auto-√âvaluation</h2>\n            <div class=\"competence-checklist\">\n                {{#each competences}}\n                <label class=\"competence-item\">\n                    <input type=\"checkbox\" on:change={handleCompetenceValidated}>\n                    <span>{{this}}</span>\n                </label>\n                {{/each}}\n            </div>\n        </section>\n    </main>\n</EducationalLayout>\n\n<style>\n    .page-header {\n        background: linear-gradient(135deg, var(--color-primary), var(--color-secondary));\n        color: white;\n        padding: 2rem;\n        border-radius: 8px;\n        margin-bottom: 2rem;\n    }\n    \n    .subject-info {\n        display: flex;\n        gap: 1rem;\n        margin-bottom: 1rem;\n    }\n    \n    .subject, .level {\n        background: rgba(255, 255, 255, 0.2);\n        padding: 0.5rem 1rem;\n        border-radius: 20px;\n        font-size: 0.875rem;\n        font-weight: 600;\n    }\n    \n    .competences ul {\n        list-style: none;\n        padding: 0;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.5rem;\n    }\n    \n    .competences li {\n        background: rgba(255, 255, 255, 0.1);\n        padding: 0.25rem 0.75rem;\n        border-radius: 12px;\n        font-size: 0.875rem;\n    }\n    \n    .educational-content {\n        max-width: 800px;\n        margin: 0 auto;\n    }\n    \n    .content-container {\n        background: white;\n        padding: 2rem;\n        border-radius: 8px;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n        margin-bottom: 2rem;\n    }\n    \n    .activities {\n        margin: 2rem 0;\n    }\n    \n    .activity-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n        gap: 1rem;\n        margin-top: 1rem;\n    }\n    \n    .activity-card {\n        background: white;\n        padding: 1.5rem;\n        border-radius: 8px;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        text-align: center;\n    }\n    \n    .btn-primary, .btn-secondary, .btn-creative {\n        padding: 0.75rem 1.5rem;\n        border: none;\n        border-radius: 6px;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n    \n    .btn-primary {\n        background: var(--color-primary);\n        color: white;\n    }\n    \n    .btn-secondary {\n        background: var(--color-secondary);\n        color: white;\n    }\n    \n    .btn-creative {\n        background: var(--color-creative);\n        color: white;\n    }\n    \n    .evaluation {\n        background: var(--bg-evaluation);\n        padding: 2rem;\n        border-radius: 8px;\n        margin-top: 2rem;\n    }\n    \n    .competence-checklist {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        margin-top: 1rem;\n    }\n    \n    .competence-item {\n        display: flex;\n        align-items: center;\n        gap: 0.75rem;\n        padding: 0.75rem;\n        background: white;\n        border-radius: 6px;\n        cursor: pointer;\n        transition: background 0.3s ease;\n    }\n    \n    .competence-item:hover {\n        background: var(--bg-hover);\n    }\n    \n    .competence-item input[type=\"checkbox\"] {\n        width: 20px;\n        height: 20px;\n    }\n</style>",
      "type": "svelte"
    },
    {
      "path": "src/routes/{{kebabCase(title)}}/content.md",
      "content": "# {{title}}\n\n> **Mati√®re:** {{subject}} | **Niveau:** {{level}}  \n> **Comp√©tences:** {{competences}}\n\n## üéØ Objectifs d'apprentissage\n\n√Ä la fin de cette le√ßon, vous serez capable de :\n\n- Objectif 1 adapt√© au niveau {{level}}\n- Objectif 2 en lien avec {{subject}}\n- Objectif 3 d√©veloppant les comp√©tences cibl√©es\n\n## üìö Introduction\n\nBienvenue dans cette le√ßon de {{subject}} adapt√©e au niveau {{level}}. \n\nNous allons explorer {{title}} de mani√®re progressive et interactive.\n\n## üîç D√©couverte\n\n### Concept principal\n\n[Explication adapt√©e au niveau {{level}}]\n\n### Exemples concrets\n\n1. **Exemple 1** : [Exemple simple et parlant]\n2. **Exemple 2** : [Exemple avec application pratique]\n3. **Exemple 3** : [Exemple cr√©atif]\n\n## üí° √Ä retenir\n\n- **Point cl√© 1** : [Synth√®se simple]\n- **Point cl√© 2** : [Concept essentiel] \n- **Point cl√© 3** : [Application pratique]\n\n## üéÆ Activit√©s\n\n### Quiz rapide\n\n1. Question adapt√©e au niveau {{level}}\n2. Question sur {{subject}}\n3. Question transversale\n\n### Exercice pratique\n\n[Instructions pour activit√© hands-on]\n\n### Projet cr√©atif\n\n[Proposition de cr√©ation personnelle]\n\n## üìà Pour aller plus loin\n\n- Ressource 1 pour approfondir\n- Ressource 2 pour pratiquer\n- Ressource 3 pour cr√©er\n\n## ‚úÖ Auto-√©valuation\n\n- [ ] J'ai compris le concept principal\n- [ ] Je sais donner un exemple\n- [ ] Je peux l'appliquer dans un nouveau contexte\n- [ ] Je peux l'expliquer √† quelqu'un d'autre\n",
      "type": "markdown"
    }
  ],
  "dependencies": [
    "@funlearning/pedagogical-tools"
  ]
}